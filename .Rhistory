baseModel = lm(swiss$Fertility + swiss$Agriculture + swiss$Examination + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(baseModel)
baseModel = lm(swiss$Fertility + swiss$Agriculture + swiss$Examination + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
pairs(swiss)
pairs(swiss)
baseModel = lm(swiss$Fertility + swiss$Agriculture + swiss$Examination + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
baseModel = lm(swiss$Fertility ~ swiss$Agriculture + swiss$Examination + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(baseModel)
ExamDenomModel = lm(swiss$Fertility + swiss$Agriculture + 1/(swiss$Examination) + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(ExamDenomModel)
ExamDenomModel = lm(swiss$Fertility ~ swiss$Agriculture + 1/(swiss$Examination) + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(ExamDenomModel)
pairs(swiss)
baseModel = lm(swiss$Fertility + swiss$Agriculture + swiss$Examination + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(baseModel)
logExamModel = lm(swiss$Fertility + swiss$Agriculture + log(swiss$Examination) + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(logExamModel)
ExamDenomModel = lm(swiss$Fertility + swiss$Agriculture + 1/(swiss$Examination) + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(ExamDenomModel)
logExamModel = lm(swiss$Fertility + swiss$Agriculture + log(swiss$Examination) + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(logExamModel)
ExamDenomModel = lm(swiss$Fertility + swiss$Agriculture + 1/(swiss$Examination) + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(ExamDenomModel)
pairs(swiss)
baseModel = lm(swiss$Fertility ~ swiss$Agriculture + swiss$Examination + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(baseModel)
logExamModel = lm(swiss$Fertility ~ swiss$Agriculture + log(swiss$Examination) + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(logExamModel)
ExamDenomModel = lm(swiss$Fertility ~ swiss$Agriculture + 1/(swiss$Examination) + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(ExamDenomModel)
plot(1/(swiss$Examination), swiss$Fertility)
pairs(swiss)
resid(ExamDenomModel)
plot(fitted(ExamDenomModel),resid(ExamDenomModel))
summary(ExamDenomModel)
ExamDenomModel = lm(swiss$Fertility ~ swiss$Agriculture + dumDenomExam + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
dumDenomExam = 1/(swiss$Examination)
ExamDenomModel = lm(swiss$Fertility ~ swiss$Agriculture + dumDenomExam + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(ExamDenomModel)
plot(1/(swiss$Examination), swiss$Fertility)
pairs(swiss)
resid(ExamDenomModel)
plot(fitted(ExamDenomModel),resid(ExamDenomModel))
plot(fitted(baseModel),resid(baseModel))
plot(fitted(ExamDenomModel),resid(ExamDenomModel))
plot(fitted(baseModel),resid(baseModel))
plot(fitted(ExamDenomModel),resid(ExamDenomModel))
EndModel = lm(dummy$Fertility ~ dummy$Agriculture + 1/dummy$Examination + dummy$Education + dummy$Catholic + dummy$Infant.Mortality )
dummy = swiss
x = c()
for(i in 1:47) {
if (dummy$Catholic[i] >= 75) {
x[i] = "Catholic"
}
else {
x[i] = "Average"
#Decided simple split was better than more complicated.
#if(dummy$Catholic[i] >= 25){
#  x[i] = "Average"
#}
#else{
#  x[i] = "Protestant"
#}
}
}
dummy$Catholic = x
EndModel = lm(dummy$Fertility ~ dummy$Agriculture + 1/dummy$Examination + dummy$Education + dummy$Catholic + dummy$Infant.Mortality )
summary(EndModel)
EndModel = lm(dummy$Fertility ~ dummy$Agriculture + dumDenomExam + dummy$Education + dummy$Catholic + dummy$Infant.Mortality )
summary(EndModel)
hetModel = lm(swiss$Fertility ~ swiss$Fertility)
hetModel = lm(swiss$Fertility ~ swiss$Examination)
plot(fitted(hetModel),resid(hetModel))
hetModel = lm(swiss$Fertility ~ swiss$Agriculture)
plot(fitted(hetModel),resid(hetModel))
hetModel = lm(swiss$Fertility ~ swiss$Education)
plot(fitted(hetModel),resid(hetModel))
hetModel = lm(swiss$Fertility ~ swiss$Catholic)
plot(fitted(hetModel),resid(hetModel))
hetModel = lm(swiss$Fertility ~ swiss$Infant.Mortality)
plot(fitted(hetModel),resid(hetModel))
summary(baseModel)
removedBaseModel = lm(swiss$Fertility ~ swiss$Agriculture + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(removedBaseModel)
summary(baseModel)
hetModel = lm(swiss$Fertility ~ swiss$Examination)
summary(hetModel)
hetModel = lm(swiss$Fertility ~ swiss$Agriculture)
summary(hetModel)
plot(fitted(hetModel),resid(hetModel))
removedBaseModel = lm(swiss$Fertility ~ swiss$Agriculture + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(removedBaseModel)
removedBaseModel = lm(swiss$Fertility ~ swiss$Examination + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(removedBaseModel)
hetModel = lm(swiss$Fertility ~ swiss$Education)
summary(hetModel)
pairs(swiss)
hetModel = lm(swiss$Fertility ~ swiss$Examination)
summary(hetModel)
hetModel = lm(swiss$Fertility ~ swiss$Agriculture)
summary(hetModel)
hetModel = lm(swiss$Fertility ~ swiss$Education)
summary(hetModel)
removedBaseModel = lm(swiss$Fertility ~ swiss$Examination + swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(removedBaseModel)
removedBaseModel = lm(swiss$Fertility ~ swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(removedBaseModel)
removedBaseModel = lm(swiss$Fertility ~ swiss$Education + swiss$Agriculture + swiss$Catholic + swiss$Infant.Mortality)
summary(removedBaseModel)
hetModel = lm(swiss$Fertility ~ swiss$Education)
plot(fitted(hetModel),resid(hetModel))
title(main = "Homoscedasticity of Swiss Fertility and Education")
plot(fitted(hetModel),resid(hetModel))
hetModel = lm(swiss$Fertility ~ swiss$Agriculture)
plot(fitted(hetModel),resid(hetModel))
hetModel = lm(swiss$Fertility ~ swiss$Catholic)
plot(fitted(hetModel),resid(hetModel))
hetModel = lm(swiss$Fertility ~ swiss$Infant.Mortality)
plot(fitted(hetModel),resid(hetModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Agriculture)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Examination)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Education)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Catholic)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Infant.Mortality)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Education)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ log(swiss$Education))
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ (swiss$Education)^2)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ 1/(swiss$Education))
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ (1/(swiss$Education)))
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ (swiss$Education))
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ log(swiss$Education))
plot(fitted(hetBaseModel),resid(hetBaseModel))
logEducation = log(swiss$Education)
removedBaseModel = lm(swiss$Fertility ~ logEducation + swiss$Agriculture + swiss$Catholic + swiss$Infant.Mortality)
summary(removedBaseModel)
removedBaseModel = lm(swiss$Fertility ~ logEducation + swiss$Catholic + swiss$Infant.Mortality)
summary(removedBaseModel)
plot(fitted(removedBaseModel),resid(removedBaseModel))
removedBaseModel = lm(swiss$Fertility ~ swiss$Education + swiss$Catholic + swiss$Infant.Mortality)
summary(removedBaseModel)
hetBaseModel=lm(swiss$Fertility ~ swiss$Agriculture)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Infant.Mortality)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Infant.Mortality)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Agriculture)
plot(fitted(hetBaseModel),resid(hetBaseModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Catholic)
plot(fitted(hetBaseModel),resid(hetBaseModel))
dummy = swiss
x = c()
for(i in 1:47) {
if (dummy$Catholic[i] >= 75) {
x[i] = "Catholic"
}
else {
x[i] = "Average"
#Decided simple split was better than more complicated.
#if(dummy$Catholic[i] >= 25){
#  x[i] = "Average"
#}
#else{
#  x[i] = "Protestant"
#}
}
}
dummy$Catholic = x
EndModel = lm(dummy$Fertility ~ dummy$Agriculture + dummy$Education + dummy$Catholic + dummy$Infant.Mortality )
summary(EndModel)
hetEndModel=lm(dummy$Fertility ~ dummy$Catholic)
plot(fitted(hetEndModel),resid(hetEndModel))
hetBaseModel=lm(swiss$Fertility ~ swiss$Catholic)
plot(fitted(hetBaseModel),resid(hetBaseModel))
